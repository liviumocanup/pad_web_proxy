// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: playback.proto

package proto

import (
	common "playback_service/proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CreatePlaylistRequest) Reset() {
	*x = CreatePlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playback_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaylistRequest) ProtoMessage() {}

func (x *CreatePlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaylistRequest.ProtoReflect.Descriptor instead.
func (*CreatePlaylistRequest) Descriptor() ([]byte, []int) {
	return file_playback_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePlaylistRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePlaylistRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type PlaylistIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistId string `protobuf:"bytes,1,opt,name=playlistId,proto3" json:"playlistId,omitempty"`
}

func (x *PlaylistIdRequest) Reset() {
	*x = PlaylistIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playback_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistIdRequest) ProtoMessage() {}

func (x *PlaylistIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistIdRequest.ProtoReflect.Descriptor instead.
func (*PlaylistIdRequest) Descriptor() ([]byte, []int) {
	return file_playback_proto_rawDescGZIP(), []int{1}
}

func (x *PlaylistIdRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

type RemovePlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistId string `protobuf:"bytes,1,opt,name=playlistId,proto3" json:"playlistId,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *RemovePlaylistRequest) Reset() {
	*x = RemovePlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playback_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePlaylistRequest) ProtoMessage() {}

func (x *RemovePlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePlaylistRequest.ProtoReflect.Descriptor instead.
func (*RemovePlaylistRequest) Descriptor() ([]byte, []int) {
	return file_playback_proto_rawDescGZIP(), []int{2}
}

func (x *RemovePlaylistRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

func (x *RemovePlaylistRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AddTracksToPlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistId string   `protobuf:"bytes,1,opt,name=playlistId,proto3" json:"playlistId,omitempty"`
	TrackIds   []string `protobuf:"bytes,2,rep,name=trackIds,proto3" json:"trackIds,omitempty"`
	UserId     string   `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *AddTracksToPlaylistRequest) Reset() {
	*x = AddTracksToPlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playback_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTracksToPlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTracksToPlaylistRequest) ProtoMessage() {}

func (x *AddTracksToPlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTracksToPlaylistRequest.ProtoReflect.Descriptor instead.
func (*AddTracksToPlaylistRequest) Descriptor() ([]byte, []int) {
	return file_playback_proto_rawDescGZIP(), []int{3}
}

func (x *AddTracksToPlaylistRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

func (x *AddTracksToPlaylistRequest) GetTrackIds() []string {
	if x != nil {
		return x.TrackIds
	}
	return nil
}

func (x *AddTracksToPlaylistRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RemoveTracksFromPlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistId string   `protobuf:"bytes,1,opt,name=playlistId,proto3" json:"playlistId,omitempty"`
	TrackIds   []string `protobuf:"bytes,2,rep,name=trackIds,proto3" json:"trackIds,omitempty"`
	UserId     string   `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *RemoveTracksFromPlaylistRequest) Reset() {
	*x = RemoveTracksFromPlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playback_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTracksFromPlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTracksFromPlaylistRequest) ProtoMessage() {}

func (x *RemoveTracksFromPlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTracksFromPlaylistRequest.ProtoReflect.Descriptor instead.
func (*RemoveTracksFromPlaylistRequest) Descriptor() ([]byte, []int) {
	return file_playback_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveTracksFromPlaylistRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

func (x *RemoveTracksFromPlaylistRequest) GetTrackIds() []string {
	if x != nil {
		return x.TrackIds
	}
	return nil
}

func (x *RemoveTracksFromPlaylistRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type PlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistId string             `protobuf:"bytes,1,opt,name=playlistId,proto3" json:"playlistId,omitempty"`
	Name       string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tracks     []*common.TrackMetadata `protobuf:"bytes,3,rep,name=tracks,proto3" json:"tracks,omitempty"`
}

func (x *PlaylistResponse) Reset() {
	*x = PlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playback_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistResponse) ProtoMessage() {}

func (x *PlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistResponse.ProtoReflect.Descriptor instead.
func (*PlaylistResponse) Descriptor() ([]byte, []int) {
	return file_playback_proto_rawDescGZIP(), []int{5}
}

func (x *PlaylistResponse) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

func (x *PlaylistResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlaylistResponse) GetTracks() []*common.TrackMetadata {
	if x != nil {
		return x.Tracks
	}
	return nil
}

type TrackPlayMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackId string `protobuf:"bytes,1,opt,name=trackId,proto3" json:"trackId,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Url     string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *TrackPlayMetadata) Reset() {
	*x = TrackPlayMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playback_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackPlayMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackPlayMetadata) ProtoMessage() {}

func (x *TrackPlayMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_playback_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackPlayMetadata.ProtoReflect.Descriptor instead.
func (*TrackPlayMetadata) Descriptor() ([]byte, []int) {
	return file_playback_proto_rawDescGZIP(), []int{6}
}

func (x *TrackPlayMetadata) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

func (x *TrackPlayMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TrackPlayMetadata) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type PlayPlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistName string               `protobuf:"bytes,1,opt,name=playlistName,proto3" json:"playlistName,omitempty"`
	Tracks       []*TrackPlayMetadata `protobuf:"bytes,2,rep,name=tracks,proto3" json:"tracks,omitempty"`
}

func (x *PlayPlaylistResponse) Reset() {
	*x = PlayPlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playback_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayPlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayPlaylistResponse) ProtoMessage() {}

func (x *PlayPlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayPlaylistResponse.ProtoReflect.Descriptor instead.
func (*PlayPlaylistResponse) Descriptor() ([]byte, []int) {
	return file_playback_proto_rawDescGZIP(), []int{7}
}

func (x *PlayPlaylistResponse) GetPlaylistName() string {
	if x != nil {
		return x.PlaylistName
	}
	return ""
}

func (x *PlayPlaylistResponse) GetTracks() []*TrackPlayMetadata {
	if x != nil {
		return x.Tracks
	}
	return nil
}

var File_playback_proto protoreflect.FileDescriptor

var file_playback_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x33, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x73, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x75, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x06,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x55, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x50,
	0x6c, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x66, 0x0a,
	0x14, 0x50, 0x6c, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x06, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x73, 0x32, 0xe1, 0x03, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x73, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x1b, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x54, 0x6f, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x20, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x46,
	0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x12, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x18, 0x5a, 0x16, 0x70, 0x6c, 0x61,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_playback_proto_rawDescOnce sync.Once
	file_playback_proto_rawDescData = file_playback_proto_rawDesc
)

func file_playback_proto_rawDescGZIP() []byte {
	file_playback_proto_rawDescOnce.Do(func() {
		file_playback_proto_rawDescData = protoimpl.X.CompressGZIP(file_playback_proto_rawDescData)
	})
	return file_playback_proto_rawDescData
}

var file_playback_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_playback_proto_goTypes = []interface{}{
	(*CreatePlaylistRequest)(nil),           // 0: CreatePlaylistRequest
	(*PlaylistIdRequest)(nil),               // 1: PlaylistIdRequest
	(*RemovePlaylistRequest)(nil),           // 2: RemovePlaylistRequest
	(*AddTracksToPlaylistRequest)(nil),      // 3: AddTracksToPlaylistRequest
	(*RemoveTracksFromPlaylistRequest)(nil), // 4: RemoveTracksFromPlaylistRequest
	(*PlaylistResponse)(nil),                // 5: PlaylistResponse
	(*TrackPlayMetadata)(nil),               // 6: TrackPlayMetadata
	(*PlayPlaylistResponse)(nil),            // 7: PlayPlaylistResponse
	(*common.TrackMetadata)(nil),                 // 8: common.TrackMetadata
	(*emptypb.Empty)(nil),                   // 9: google.protobuf.Empty
	(*common.StatusResponse)(nil),                // 10: common.StatusResponse
}
var file_playback_proto_depIdxs = []int32{
	8,  // 0: PlaylistResponse.tracks:type_name -> common.TrackMetadata
	6,  // 1: PlayPlaylistResponse.tracks:type_name -> TrackPlayMetadata
	0,  // 2: PlaybackService.CreatePlaylist:input_type -> CreatePlaylistRequest
	2,  // 3: PlaybackService.RemovePlaylist:input_type -> RemovePlaylistRequest
	3,  // 4: PlaybackService.AddTracksToPlaylist:input_type -> AddTracksToPlaylistRequest
	4,  // 5: PlaybackService.RemoveTracksFromPlaylist:input_type -> RemoveTracksFromPlaylistRequest
	1,  // 6: PlaybackService.GetPlaylistById:input_type -> PlaylistIdRequest
	1,  // 7: PlaybackService.PlayPlaylist:input_type -> PlaylistIdRequest
	9,  // 8: PlaybackService.Status:input_type -> google.protobuf.Empty
	5,  // 9: PlaybackService.CreatePlaylist:output_type -> PlaylistResponse
	9,  // 10: PlaybackService.RemovePlaylist:output_type -> google.protobuf.Empty
	9,  // 11: PlaybackService.AddTracksToPlaylist:output_type -> google.protobuf.Empty
	9,  // 12: PlaybackService.RemoveTracksFromPlaylist:output_type -> google.protobuf.Empty
	5,  // 13: PlaybackService.GetPlaylistById:output_type -> PlaylistResponse
	7,  // 14: PlaybackService.PlayPlaylist:output_type -> PlayPlaylistResponse
	10, // 15: PlaybackService.Status:output_type -> common.StatusResponse
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_playback_proto_init() }
func file_playback_proto_init() {
	if File_playback_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_playback_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playback_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaylistIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playback_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playback_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTracksToPlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playback_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTracksFromPlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playback_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playback_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackPlayMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playback_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayPlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_playback_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_playback_proto_goTypes,
		DependencyIndexes: file_playback_proto_depIdxs,
		MessageInfos:      file_playback_proto_msgTypes,
	}.Build()
	File_playback_proto = out.File
	file_playback_proto_rawDesc = nil
	file_playback_proto_goTypes = nil
	file_playback_proto_depIdxs = nil
}
