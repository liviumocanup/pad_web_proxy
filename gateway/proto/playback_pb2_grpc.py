# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import common_pb2 as common__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from proto import playback_pb2 as playback__pb2


class PlaybackServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePlaylist = channel.unary_unary(
                '/PlaybackService/CreatePlaylist',
                request_serializer=playback__pb2.CreatePlaylistRequest.SerializeToString,
                response_deserializer=playback__pb2.PlaylistResponse.FromString,
                )
        self.RemovePlaylist = channel.unary_unary(
                '/PlaybackService/RemovePlaylist',
                request_serializer=playback__pb2.RemovePlaylistRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.AddTracksToPlaylist = channel.unary_unary(
                '/PlaybackService/AddTracksToPlaylist',
                request_serializer=playback__pb2.AddTracksToPlaylistRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.RemoveTracksFromPlaylist = channel.unary_unary(
                '/PlaybackService/RemoveTracksFromPlaylist',
                request_serializer=playback__pb2.RemoveTracksFromPlaylistRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetPlaylistById = channel.unary_unary(
                '/PlaybackService/GetPlaylistById',
                request_serializer=playback__pb2.PlaylistIdRequest.SerializeToString,
                response_deserializer=playback__pb2.PlaylistResponse.FromString,
                )
        self.PlayPlaylist = channel.unary_unary(
                '/PlaybackService/PlayPlaylist',
                request_serializer=playback__pb2.PlaylistIdRequest.SerializeToString,
                response_deserializer=playback__pb2.PlayPlaylistResponse.FromString,
                )
        self.Status = channel.unary_unary(
                '/PlaybackService/Status',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=common__pb2.StatusResponse.FromString,
                )


class PlaybackServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemovePlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddTracksToPlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveTracksFromPlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaylistById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlayPlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlaybackServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePlaylist,
                    request_deserializer=playback__pb2.CreatePlaylistRequest.FromString,
                    response_serializer=playback__pb2.PlaylistResponse.SerializeToString,
            ),
            'RemovePlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.RemovePlaylist,
                    request_deserializer=playback__pb2.RemovePlaylistRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AddTracksToPlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTracksToPlaylist,
                    request_deserializer=playback__pb2.AddTracksToPlaylistRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RemoveTracksFromPlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveTracksFromPlaylist,
                    request_deserializer=playback__pb2.RemoveTracksFromPlaylistRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetPlaylistById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaylistById,
                    request_deserializer=playback__pb2.PlaylistIdRequest.FromString,
                    response_serializer=playback__pb2.PlaylistResponse.SerializeToString,
            ),
            'PlayPlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.PlayPlaylist,
                    request_deserializer=playback__pb2.PlaylistIdRequest.FromString,
                    response_serializer=playback__pb2.PlayPlaylistResponse.SerializeToString,
            ),
            'Status': grpc.unary_unary_rpc_method_handler(
                    servicer.Status,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=common__pb2.StatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'PlaybackService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PlaybackService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PlaybackService/CreatePlaylist',
            playback__pb2.CreatePlaylistRequest.SerializeToString,
            playback__pb2.PlaylistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemovePlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PlaybackService/RemovePlaylist',
            playback__pb2.RemovePlaylistRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddTracksToPlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PlaybackService/AddTracksToPlaylist',
            playback__pb2.AddTracksToPlaylistRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveTracksFromPlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PlaybackService/RemoveTracksFromPlaylist',
            playback__pb2.RemoveTracksFromPlaylistRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlaylistById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PlaybackService/GetPlaylistById',
            playback__pb2.PlaylistIdRequest.SerializeToString,
            playback__pb2.PlaylistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlayPlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PlaybackService/PlayPlaylist',
            playback__pb2.PlaylistIdRequest.SerializeToString,
            playback__pb2.PlayPlaylistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PlaybackService/Status',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            common__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
